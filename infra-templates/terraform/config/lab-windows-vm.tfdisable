# module to create lab VM

module "lab_vm" {
  source = "git::https://gitlab.otxlab.net/ems_cloudops/terraform/gcp/modules/otc-ems-customer-server.git?ref=0.12.1"

  instance_name = "gcp-${var.customer}lab-${var.env_shortcodes[var.env]}01"
  count         = var.lab_vm_required ? 1 : 0
  zone          = local.zonea
  domain        = "com"
  instance_type = var.lab_instance_type
  #ip_address    = var.lab_ip_address
  customer      = var.customer
  env           = var.env
  boot_disk     = {
    device_name = "gcp-${var.customer}lab-${var.env_shortcodes[var.env]}01-boot"
    image       = "windows-2019"
    type        = var.env == "prod" ? "pd-ssd" : "pd-balanced"
    size        = 50
  }
  attached_disks = [
    {
      device_name   = "gcp-${var.customer}lab-${var.env_shortcodes[var.env]}01-disk1"
      type          = var.env == "prod" ? "pd-ssd" : "pd-balanced"
      block_size    = 4096
      size          = var.lab_attached_disk1_size
      regional      = var.env == "prod" ? true : false
      zone          = var.env == "prod" ? "" : local.zonea
      replica_zones = var.env == "prod" ? [local.zonea, local.zoneb] : [""]
    },
    {
      device_name   = "gcp-${var.customer}lab-${var.env_shortcodes[var.env]}01-disk2"
      type          = var.env == "prod" ? "pd-ssd" : "pd-balanced"
      block_size    = 4096
      size          = var.lab_attached_disk2_size
      regional      = var.env == "prod" ? true : false
      zone          = var.env == "prod" ? "" : local.zonea
      replica_zones = var.env == "prod" ? [local.zonea, local.zoneb] : [""]
    },
    {
      device_name   = "gcp-${var.customer}lab-${var.env_shortcodes[var.env]}01-disk3"
      type          = var.env == "prod" ? "pd-ssd" : "pd-balanced"
      block_size    = 4096
      size          = var.lab_attached_disk3_size
      regional      = var.env == "prod" ? true : false
      zone          = var.env == "prod" ? "" : local.zonea
      replica_zones = var.env == "prod" ? [local.zonea, local.zoneb] : [""]
    }
  ]
  subnetwork = {
    name    = var.subnetwork
    project = var.network_project_id
  }
  network_tags          = local.network_tags
  service_account_email = google_service_account.lab_service_account[count.index].email

  metadata = {
    windows-startup-script-url = var.startup_script["win"]
    disks                      = "${var.lab_attached_disk1_size},${var.lab_attached_disk2_size},${var.lab_attached_disk3_size}"
  }
  snapshot_policy = "${var.customer}-${var.env}"

  depends_on = [google_compute_resource_policy.backup_prod, google_compute_resource_policy.backup_non_prod]
}


# lab VM service account details

resource "google_service_account" "lab_service_account" {
  project    = var.project
  account_id = "gcp-${var.customer}lab-${var.env_shortcodes[var.env]}01"
  count      = var.lab_vm_required ? 1 : 0
}
resource "google_project_iam_member" "object_viewer_lab_service_account" {
  project = var.project
  role    = "roles/storage.objectViewer"
  member  = "serviceAccount:${google_service_account.lab_service_account[count.index].email}"
  count   = var.lab_vm_required ? 1 : 0
}
resource "google_project_iam_member" "object_vieweremsproject_lab_service_account" {
  project = var.emsproject
  role    = "roles/storage.objectViewer"
  member  = "serviceAccount:${google_service_account.lab_service_account[count.index].email}"
  count   = var.lab_vm_required ? 1 : 0
}
resource "google_project_iam_member" "log_writer_lab_service_account" {
  project = var.project
  role    = "roles/logging.logWriter"
  member  = "serviceAccount:${google_service_account.lab_service_account[count.index].email}"
  count   = var.lab_vm_required ? 1 : 0
}
resource "google_project_iam_member" "metric_writer_lab_service_account" {
  project = var.project
  role    = "roles/monitoring.metricWriter"
  member  = "serviceAccount:${google_service_account.lab_service_account[count.index].email}"
  count   = var.lab_vm_required ? 1 : 0
}